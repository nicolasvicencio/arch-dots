local status, dashboard = pcall(require, "dashboard")
if not status then
	return
end

dashboard.setup({
	theme = "doom",
	config = {
		header = {
			"                                                       ",
			"                                                       ",
			"                                                       ",
			" ███╗   ██╗ ███████╗ ██████╗  ██╗   ██╗ ██╗ ███╗   ███╗",
			" ████╗  ██║ ██╔════╝██╔═══██╗ ██║   ██║ ██║ ████╗ ████║",
			" ██╔██╗ ██║ █████╗  ██║   ██║ ██║   ██║ ██║ ██╔████╔██║",
			" ██║╚██╗██║ ██╔══╝  ██║   ██║ ╚██╗ ██╔╝ ██║ ██║╚██╔╝██║",
			" ██║ ╚████║ ███████╗╚██████╔╝  ╚████╔╝  ██║ ██║ ╚═╝ ██║",
			" ╚═╝  ╚═══╝ ╚══════╝ ╚═════╝    ╚═══╝   ╚═╝ ╚═╝     ╚═╝",
			"                                                       ",
			"                                                       ",
			"                                                       ",
			"                                                       ",
			-- '                                   ',
			-- '                                   ',
			-- '                                   ',
			-- '                                   ',
			-- '                                   ',
			-- '                                   ',
			-- '   ⣴⣶⣤⡤⠦⣤⣀⣤⠆     ⣈⣭⣿⣶⣿⣦⣼⣆          ',
			-- '    ⠉⠻⢿⣿⠿⣿⣿⣶⣦⠤⠄⡠⢾⣿⣿⡿⠋⠉⠉⠻⣿⣿⡛⣦       ',
			-- '          ⠈⢿⣿⣟⠦ ⣾⣿⣿⣷    ⠻⠿⢿⣿⣧⣄     ',
			-- '           ⣸⣿⣿⢧ ⢻⠻⣿⣿⣷⣄⣀⠄⠢⣀⡀⠈⠙⠿⠄    ',
			-- '          ⢠⣿⣿⣿⠈    ⣻⣿⣿⣿⣿⣿⣿⣿⣛⣳⣤⣀⣀   ',
			-- '   ⢠⣧⣶⣥⡤⢄ ⣸⣿⣿⠘  ⢀⣴⣿⣿⡿⠛⣿⣿⣧⠈⢿⠿⠟⠛⠻⠿⠄  ',
			-- '  ⣰⣿⣿⠛⠻⣿⣿⡦⢹⣿⣷   ⢊⣿⣿⡏  ⢸⣿⣿⡇ ⢀⣠⣄⣾⠄   ',
			-- ' ⣠⣿⠿⠛ ⢀⣿⣿⣷⠘⢿⣿⣦⡀ ⢸⢿⣿⣿⣄ ⣸⣿⣿⡇⣪⣿⡿⠿⣿⣷⡄  ',
			-- ' ⠙⠃   ⣼⣿⡟  ⠈⠻⣿⣿⣦⣌⡇⠻⣿⣿⣷⣿⣿⣿ ⣿⣿⡇ ⠛⠻⢷⣄ ',
			-- '      ⢻⣿⣿⣄   ⠈⠻⣿⣿⣿⣷⣿⣿⣿⣿⣿⡟ ⠫⢿⣿⡆     ',
			-- '       ⠻⣿⣿⣿⣿⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⡟⢀⣀⣤⣾⡿⠃     ',
			-- '                                   ',
			-- '                                   ',
			-- '                                   ',
			-- '                                   ',
			-- '                                   ',
			-- '                                   ',
		},
		center = {
			{
				icon = "󰈞 ",
				icon_hl = "Title",
				desc = "Find file",
				desc_hl = "String",
				key = "f",
				key_hl = "Number",
				action = ':lua require("telescope.builtin").find_files()',
			},
			{
				icon = "󰄉 ",
				icon_hl = "Title",
				desc = "Recently used files                        ",
				desc_hl = "String",
				key = "r",
				key_hl = "Number",
				action = ':lua require("telescope.builtin").oldfiles()',
			},
			{
				icon = "󰊄 ",
				icon_hl = "Title",
				desc = "Find text",
				desc_hl = "String",
				key = "w",
				key_hl = "Number",
				action = ':lua require("telescope.builtin").live_grep()',
			},
			{
				icon = " ",
				icon_hl = "Title",
				desc = "Configuration",
				desc_hl = "String",
				key = "c",
				key_hl = "Number",
				action = ":cd ~/.config/nvim | e ~/.config/nvim/init.lua",
			},
			{
				icon = " ",
				icon_hl = "Title",
				desc = "Mason",
				desc_hl = "String",
				key = "m",
				key_hl = "Number",
				action = ":Mason",
			},
			{
				icon = " ",
				icon_hl = "Title",
				desc = "Quit Neovim",
				desc_hl = "String",
				key = "q",
				key_hl = "Number",
				action = ":qa",
			},
		},
		footer = {},
	},
})
